<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetSpell.SpellChecker</name>
    </assembly>
    <members>
        <member name="T:NetSpell.SpellChecker.Dictionary">
            <summary>
            	The Dictionary class encapsulates all functions associated 
            	with the word dictionary.
            </summary>
            <remarks>
            	When adding or removing words, you must call save before
            	using the dictionary because the word list must be sorted.
            </remarks>
        </member>
        <member name="M:NetSpell.SpellChecker.Dictionary.#ctor">
            <summary>
                Dictionary default constructor
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.Dictionary.#ctor(System.String)">
            <summary>
                Dictionary constructor that takes in a file name
                to automatically load the dictionary from
            </summary>
            <param name="fileName" type="string">
                <para>
                    The name of the dictionary file to load
                </para>
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.Dictionary.AddWord(System.String)">
            <summary>
                Adds a word to the dictionary
            </summary>
            <remarks>
            	You must call save before using the dictionary
            	because the word list must be sorted.
            </remarks>
            <param name="word" type="string">
                <para>
                    The word to add to the dictionary
                </para>
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.Dictionary.Load">
            <summary>
                Loads the Dictionary Word List from the FileName
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.Dictionary.Load(System.String)">
            <summary>
                Loads the Dictionary Word List from the FileName
            </summary>
            <param name="fileName" type="string">
                <para>
                    The name of the dictionary file to load
                </para>
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.Dictionary.Save">
            <summary>
                Saves the Dictionary Word List to a file
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.Dictionary.Save(System.String)">
            <summary>
                Saves the Dictionary Word List to a file
            </summary>
            <param name="fileName" type="string">
                <para>
                    The name of the dictionary file to save
                </para>
            </param>
        </member>
        <member name="P:NetSpell.SpellChecker.Dictionary.FileName">
            <summary>
                The file name and path of the dictionary file
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.Dictionary.WordList">
            <summary>
                The list of words in this dictionary
            </summary>
        </member>
        <member name="T:NetSpell.SpellChecker.DictionaryCollection">
            <summary>
                A collection that stores 'Dictionary' objects.
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.#ctor">
            <summary>
                Initializes a new instance of 'DictionaryCollection'.
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.#ctor(NetSpell.SpellChecker.DictionaryCollection)">
            <summary>
                Initializes a new instance of 'DictionaryCollection' based on an already existing instance.
            </summary>
            <param name='dicValue'>
                A 'DictionaryCollection' from which the contents is copied
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.#ctor(NetSpell.SpellChecker.Dictionary[])">
            <summary>
                Initializes a new instance of 'DictionaryCollection' with an array of 'Dictionary' objects.
            </summary>
            <param name='dicValue'>
                An array of 'Dictionary' objects with which to initialize the collection
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.Add(NetSpell.SpellChecker.Dictionary)">
            <summary>
                Adds a 'Dictionary' item with the specified value to the 'DictionaryCollection'
            </summary>
            <param name='dicValue'>
                The 'Dictionary' to add.
            </param>
            <returns>
                The index at which the new element was inserted.
            </returns>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.AddRange(NetSpell.SpellChecker.Dictionary[])">
            <summary>
                Copies the elements of an array at the end of this instance of 'DictionaryCollection'.
            </summary>
            <param name='dicValue'>
                An array of 'Dictionary' objects to add to the collection.
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.AddRange(NetSpell.SpellChecker.DictionaryCollection)">
            <summary>
                Adds the contents of another 'DictionaryCollection' at the end of this instance.
            </summary>
            <param name='dicValue'>
                A 'DictionaryCollection' containing the objects to add to the collection.
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.Contains(NetSpell.SpellChecker.Dictionary)">
            <summary>
                Gets a value indicating whether the 'DictionaryCollection' contains the specified value.
            </summary>
            <param name='dicValue'>
                The item to locate.
            </param>
            <returns>
                True if the item exists in the collection; false otherwise.
            </returns>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.CopyTo(NetSpell.SpellChecker.Dictionary[],System.Int32)">
            <summary>
                Copies the 'DictionaryCollection' values to a one-dimensional System.Array
                instance starting at the specified array index.
            </summary>
            <param name='dicArray'>
                The one-dimensional System.Array that represents the copy destination.
            </param>
            <param name='intIndex'>
                The index in the array where copying begins.
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.IndexOf(NetSpell.SpellChecker.Dictionary)">
            <summary>
                Returns the index of a 'Dictionary' object in the collection.
            </summary>
            <param name='dicValue'>
                The 'Dictionary' object whose index will be retrieved.
            </param>
            <returns>
                If found, the index of the value; otherwise, -1.
            </returns>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.Insert(System.Int32,NetSpell.SpellChecker.Dictionary)">
            <summary>
                Inserts an existing 'Dictionary' into the collection at the specified index.
            </summary>
            <param name='intIndex'>
                The zero-based index where the new item should be inserted.
            </param>
            <param name='dicValue'>
                The item to insert.
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.GetEnumerator">
            <summary>
                Returns an enumerator that can be used to iterate through
                the 'DictionaryCollection'.
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.Remove(NetSpell.SpellChecker.Dictionary)">
            <summary>
                Removes a specific item from the 'DictionaryCollection'.
            </summary>
            <param name='dicValue'>
                The item to remove from the 'DictionaryCollection'.
            </param>
        </member>
        <member name="P:NetSpell.SpellChecker.DictionaryCollection.Item(System.Int32)">
            <summary>
                Represents the 'Dictionary' item at the specified index position.
            </summary>
            <param name='intIndex'>
                The zero-based index of the entry to locate in the collection.
            </param>
            <value>
                The entry at the specified index of the collection.
            </value>
        </member>
        <member name="T:NetSpell.SpellChecker.DictionaryCollection.DictionaryEnumerator">
            <summary>
                A strongly typed enumerator for 'DictionaryCollection'
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.DictionaryEnumerator.#ctor(NetSpell.SpellChecker.DictionaryCollection)">
            <summary>
                Enumerator constructor
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.DictionaryEnumerator.MoveNext">
            <summary>
                Advances the enumerator to the next element of the collection
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.DictionaryEnumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
                Advances the enumerator to the next element of the collection
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.DictionaryEnumerator.Reset">
            <summary>
                Sets the enumerator to the first element in the collection
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.DictionaryCollection.DictionaryEnumerator.System#Collections#IEnumerator#Reset">
            <summary>
                Sets the enumerator to the first element in the collection
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.DictionaryCollection.DictionaryEnumerator.Current">
            <summary>
                Gets the current element from the collection (strongly typed)
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.DictionaryCollection.DictionaryEnumerator.System#Collections#IEnumerator#Current">
            <summary>
                Gets the current element from the collection
            </summary>
        </member>
        <member name="T:NetSpell.SpellChecker.DoubleMetaphone">
            <summary>
            	The double metaphone class is used to generate a code
            	for what the word sounds like
            </summary>
            <remarks>
            	Double Metaphone (c) 1998, 1999 by Lawrence Philips
            
            	Slightly modified by Kevin Atkinson to fix several bugs and 
            	to allow it to give back more than 4 characters.
            	
            	Converted to C# by Paul Welter
            </remarks>
        </member>
        <member name="M:NetSpell.SpellChecker.DoubleMetaphone.#ctor">
            <summary>
                DoubleMetaphone Default Constructor
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.DoubleMetaphone.#ctor(System.String)">
            <summary>
                DoubleMetaphone Constructor
            </summary>
            <param name="word" type="string">
                <para>
                    word to generate the metaphone code on
                </para>
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.DoubleMetaphone.GenerateMetaphone">
            <summary>
                Generates the Primary and Secondary Metaphone codes
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.DoubleMetaphone.GenerateMetaphone(System.String)">
            <summary>
                Generates the Primary and Secondary Metaphone codes
            </summary>
            <param name="word" type="string">
                <para>
                    word to generate the metaphone code on
                </para>
            </param>
        </member>
        <member name="P:NetSpell.SpellChecker.DoubleMetaphone.CurrentWord">
            <summary>
            	Word that the metaphone code was generated from
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.DoubleMetaphone.PrimaryCode">
            <summary>
            	Primary Metaphone code
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.DoubleMetaphone.SecondaryCode">
            <summary>
            	Secondary Metaphone code
            </summary>
        </member>
        <member name="T:NetSpell.SpellChecker.OptionForm">
            <summary>
            Summary description for OptionForm.
            </summary>
        </member>
        <member name="F:NetSpell.SpellChecker.OptionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.OptionForm.#ctor(NetSpell.SpellChecker.Spelling@)">
            <summary>
            	Default Constructor
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.OptionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.OptionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetSpell.SpellChecker.AssemblyInfo">
            <summary>
            Summary description 
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.AssemblyInfo.CodeBase">
            <summary>
            CodeBase of Assembly
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.AssemblyInfo.Company">
            <summary>
            Company of Assembly
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.AssemblyInfo.Copyright">
            <summary>
            Copyright of Assembly
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.AssemblyInfo.Description">
            <summary>
            Description of Assembly
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.AssemblyInfo.FullName">
            <summary>
            	FullName of Assembly
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.AssemblyInfo.Name">
            <summary>
            Name of Assembly
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.AssemblyInfo.Product">
            <summary>
            Product of Assembly
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.AssemblyInfo.Title">
            <summary>
            Title of Assembly
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.AssemblyInfo.Version">
            <summary>
            Version of Assembly
            </summary>
        </member>
        <member name="T:NetSpell.SpellChecker.Spelling">
            <summary>
            	The Spelling class encapsulates the functions necessary to check
            	the spelling of inputted text.
            </summary>
        </member>
        <member name="F:NetSpell.SpellChecker.Spelling.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.#ctor">
            <summary>
                Initializes a new instance of the SpellCheck class
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.#ctor(NetSpell.SpellChecker.Dictionary[])">
            <summary>
                Initializes a new instance of the SpellCheck class with 
                the specified dictionary object. 
            </summary>
            <param name="dictionaries" type="FreeSpell.Dictionary">
                <para>
                    The Dictionary object to use
                </para>
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.#ctor(NetSpell.SpellChecker.Dictionary)">
            <summary>
                Initializes a new instance of the SpellCheck class with 
                the specified dictionary object. 
            </summary>
            <param name="mainDictionary" type="FreeSpell.Dictionary">
                <para>
                    The Dictionary object to use
                </para>
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.#ctor(System.String[])">
            <summary>
                Initializes a new instance of the SpellCheck class with 
                the specified dictionary file. 
            </summary>
            <param name="dictionaryFiles" type="string">
                <para>
                    The name of the dictionary file to load
                </para>
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the SpellCheck class with 
                the specified dictionary file. 
            </summary>
            <param name="mainDictionaryFile" type="string">
                <para>
                    The main spell checker dictionary file name
                </para>
            </param>
            <param name="userDictionaryFile" type="string">
                <para>
                    The user dictionary filename
                </para>
            </param>
            <returns>
                A void value...
            </returns>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.#ctor(System.String)">
            <summary>
                Initializes a new instance of the SpellCheck class with 
                the specified dictionary file. 
            </summary>
            <param name="mainDictionaryFile" type="string">
                <para>
                     The main spell checker dictionary file name
                </para>
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.#ctor(System.ComponentModel.IContainer)">
            <summary>
                Required for Windows.Forms Class Composition Designer support
            </summary>
            <param name="container" type="System.ComponentModel.IContainer">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.CalculateWords">
            <summary>
                Calculates the words from the Text property
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.CheckString(System.String)">
            <summary>
                Determines if the string should be spell checked
            </summary>
            <param name="characters" type="string">
                <para>
                    The Characters to check
                </para>
            </param>
            <returns>
                Returns true if the string should be spell checked
            </returns>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.Reset">
            <summary>
                Resets the public properties
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.DeleteWord">
            <summary>
                Deletes the CurrentWord from the Text Property
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.IgnoreAllWord">
            <summary>
                Ignores all instances of the CurrentWord in the Text Property
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.IgnoreWord">
            <summary>
                Ignores the instances of the CurrentWord in the Text Property
            </summary>
            <remarks>
            	Must call SpellCheck after call this method to resume
            	spell checking
            </remarks>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.ReplaceAllWord">
            <summary>
                Replaces all instances of the CurrentWord in the Text Property
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.ReplaceAllWord(System.String)">
            <summary>
                Replaces all instances of the CurrentWord in the Text Property
            </summary>
            <param name="replacementWord" type="string">
                <para>
                    The word to replace the CurrentWord with
                </para>
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.ReplaceWord">
            <summary>
                Replaces the instances of the CurrentWord in the Text Property
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.ReplaceWord(System.String)">
            <summary>
                Replaces the instances of the CurrentWord in the Text Property
            </summary>
            <param name="replacementWord" type="string">
                <para>
                    The word to replace the CurrentWord with
                </para>
            </param>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.Soundex(System.String)">
            <summary>
                A code that represents how the word sounds phonetically
                based on the way that it's spelled
            </summary>
            <param name="word" type="string">
                <para>
                    The word to generate soundex code on
                </para>
            </param>
            <remarks>
            	* Made obsolete by DoubleMetaphone class. This method is
            	no longer used.
            	
            	This function is based off the Poor Man's Spell Checker
            	by Sam Kirchmeier.  
            	
            	http://www.kirchmeier.org/code/pmsc/
            </remarks>
            <returns>
                The soundex code for the word
            </returns>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.SpellCheck">
            <summary>
                Spell checks the words in the <see cref="P:NetSpell.SpellChecker.Spelling.Text"/> property starting
                at the <see cref="P:NetSpell.SpellChecker.Spelling.WordIndex"/> position
            </summary>
            <returns>
                Returns true if there is a word found in the text 
                that is not in the dictionaries
            </returns>
            <seealso cref="P:NetSpell.SpellChecker.Spelling.CurrentWord"/>
            <seealso cref="P:NetSpell.SpellChecker.Spelling.WordIndex"/>
            <seealso cref="P:NetSpell.SpellChecker.Spelling.Dictionaries"/>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.SpellCheck(System.Int32)">
            <summary>
                Spell checks the words in the <see cref="P:NetSpell.SpellChecker.Spelling.Text"/> property starting
                at the <see cref="P:NetSpell.SpellChecker.Spelling.WordIndex"/> position. This overload takes in the
                WordIndex to start checking from.
            </summary>
            <param name="startWordIndex" type="int">
                <para>
                    The index of the word to start checking from. 
                </para>
            </param>
            <returns>
                Returns true if there is a word found in the text 
                that is not in the dictionaries
            </returns>
            <seealso cref="P:NetSpell.SpellChecker.Spelling.CurrentWord"/>
            <seealso cref="P:NetSpell.SpellChecker.Spelling.WordIndex"/>
            <seealso cref="P:NetSpell.SpellChecker.Spelling.Dictionaries"/>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.SpellCheck(System.String)">
            <summary>
                Spell checks the words in the <see cref="P:NetSpell.SpellChecker.Spelling.Text"/> property starting
                at the <see cref="P:NetSpell.SpellChecker.Spelling.WordIndex"/> position. This overload takes in the 
                text to spell check
            </summary>
            <param name="text" type="string">
                <para>
                    The text to spell check
                </para>
            </param>
            <returns>
                Returns true if there is a word found in the text 
                that is not in the dictionaries
            </returns>
            <seealso cref="P:NetSpell.SpellChecker.Spelling.CurrentWord"/>
            <seealso cref="P:NetSpell.SpellChecker.Spelling.WordIndex"/>
            <seealso cref="P:NetSpell.SpellChecker.Spelling.Dictionaries"/>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.SpellCheck(System.String,System.Int32)">
            <summary>
                Spell checks the words in the <see cref="P:NetSpell.SpellChecker.Spelling.Text"/> property starting
                at the <see cref="P:NetSpell.SpellChecker.Spelling.WordIndex"/> position. This overload takes in 
                the text to check and the WordIndex to start checking from.
            </summary>
            <param name="text" type="string">
                <para>
                    The text to spell check
                </para>
            </param>
            <param name="startWordIndex" type="int">
                <para>
                    The index of the word to start checking from
                </para>
            </param>
            <returns>
                Returns true if there is a word found in the text 
                that is not in the dictionaries
            </returns>
            <seealso cref="P:NetSpell.SpellChecker.Spelling.CurrentWord"/>
            <seealso cref="P:NetSpell.SpellChecker.Spelling.WordIndex"/>
            <seealso cref="P:NetSpell.SpellChecker.Spelling.Dictionaries"/>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.Suggest">
            <summary>
                Populates the <see cref="P:NetSpell.SpellChecker.Spelling.Suggestions"/> property with word suggestions
                for the <see cref="P:NetSpell.SpellChecker.Spelling.CurrentWord"/>
            </summary>
            <seealso cref="P:NetSpell.SpellChecker.Spelling.CurrentWord"/>
            <seealso cref="P:NetSpell.SpellChecker.Spelling.Suggestions"/>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.TestWord(System.String)">
            <summary>
                Checks to see if the word is in the dictionary
            </summary>
            <param name="word" type="string">
                <para>
                    The word to check
                </para>
            </param>
            <returns>
                Returns true if word is found in dictionary
            </returns>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.WordSimilarity(System.String,System.String)">
            <summary>
                Rates the words similarity based on two criteria: length, and letter content. 
                SimilarWord is awarded some points if it is about the same length as the word. 
                It is also awarded one point for each letter that they share. 
            </summary>
            <param name="word" type="string">
                <para>
                    The base word to compare SimilarWord to 
                </para>
            </param>
            <param name="similarWord" type="string">
                <para>
                    The word to rate similarity with
                </para>
            </param>
            <remarks>
            	This function is based off the Poor Man's Spell Checker
            	by Sam Kirchmeier.  
            	
            	http://www.kirchmeier.org/code/pmsc/
            </remarks>
            <returns>
                The score of how similar the words are
            </returns>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.OnDoubledWord(NetSpell.SpellChecker.WordEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.OnEndOfText(System.EventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.OnMisspelledWord(NetSpell.SpellChecker.WordEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:NetSpell.SpellChecker.Spelling.DoubledWord">
            <summary>
                This event is fired when word is detected two times in a row
            </summary>
        </member>
        <member name="E:NetSpell.SpellChecker.Spelling.EndOfText">
            <summary>
                This event is fired when the spell checker reaches the end of
                the text in the Text property
            </summary>
        </member>
        <member name="E:NetSpell.SpellChecker.Spelling.MisspelledWord">
            <summary>
                This event is fired when the spell checker finds a word that 
                is not in the dictionaries
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.Spelling.CurrentWord">
            <summary>
                The current word being spell checked from the text property
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.Spelling.Dictionaries">
            <summary>
                A collection of dictionaries to use when spell checking
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.Spelling.IgnoreAllCapsWords">
            <summary>
                Ignore words with all capital letters when spell checking
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.Spelling.IgnoreList">
            <summary>
                List of words to automatically ignore
            </summary>
            <remarks>
            	When <see cref="M:NetSpell.SpellChecker.Spelling.IgnoreAllWord"/> is clicked, the <see cref="P:NetSpell.SpellChecker.Spelling.CurrentWord"/> is added to this list
            </remarks>
        </member>
        <member name="P:NetSpell.SpellChecker.Spelling.IgnoreWordsWithDigits">
            <summary>
                Ignore words with digits when spell checking
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.Spelling.MainDictionary">
            <summary>
            	The file name for the main dictionary
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.Spelling.MaxSuggestions">
            <summary>
                The maximum number of suggestions to generate
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.Spelling.ReplaceList">
            <summary>
                List of words and replacement values to automatically replace
            </summary>
            <remarks>
            	When <see cref="M:NetSpell.SpellChecker.Spelling.ReplaceAllWord"/> is clicked, the <see cref="P:NetSpell.SpellChecker.Spelling.CurrentWord"/> is added to this list
            </remarks>
        </member>
        <member name="P:NetSpell.SpellChecker.Spelling.ReplacementWord">
            <summary>
                The word to used when replacing the misspelled word
            </summary>
            <seealso cref="M:NetSpell.SpellChecker.Spelling.ReplaceAllWord"/>
            <seealso cref="M:NetSpell.SpellChecker.Spelling.ReplaceWord"/>
        </member>
        <member name="P:NetSpell.SpellChecker.Spelling.ShowDialog">
            <summary>
                Determines if the spell checker should use its internal suggestions
                and options dialogs.
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.Spelling.SpellingForm">
            <summary>
                The internal spelling suggestions dialog form
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.Spelling.Suggestions">
            <summary>
                An array of word suggestions for the correct spelling of the misspelled word
            </summary>
            <seealso cref="M:NetSpell.SpellChecker.Spelling.Suggest"/>
            <seealso cref="M:NetSpell.SpellChecker.Spelling.SpellCheck"/>
            <seealso cref="P:NetSpell.SpellChecker.Spelling.MaxSuggestions"/>
        </member>
        <member name="P:NetSpell.SpellChecker.Spelling.Text">
            <summary>
                The text to spell check
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.Spelling.UserDictionary">
            <summary>
            	The file name of the current user dictionary
            </summary>
            <remarks>
            	The user dictionary is where words get added by the user
            </remarks>
        </member>
        <member name="P:NetSpell.SpellChecker.Spelling.WordCount">
            <summary>
                The number of words being spell checked
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.Spelling.WordIndex">
            <summary>
                WordIndex is the index of the current word being spell checked
            </summary>
        </member>
        <member name="T:NetSpell.SpellChecker.Spelling.DoubledWordEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement
            </summary>
        </member>
        <member name="T:NetSpell.SpellChecker.Spelling.EndOfTextEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement
            </summary>
        </member>
        <member name="T:NetSpell.SpellChecker.Spelling.MisspelledWordEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement
            </summary>
        </member>
        <member name="T:NetSpell.SpellChecker.Spelling.WordSuggestion">
            <summary>
                This class is used to sort suggestions
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.Spelling.WordSuggestion.CompareTo(System.Object)">
            <summary>
                Method inherited from the IComparable interface
            </summary>
            <remarks>
            	Note: the compare sorts in desc order, largest score first
            </remarks>
        </member>
        <member name="T:NetSpell.SpellChecker.WordEventArgs">
            <summary>
                Class sent to the event handler when the DoubleWord or 
                MisspelledWord event occurs
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.WordEventArgs.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
                Constructor used to pass in properties
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.WordEventArgs.TextIndex">
            <summary>
                Text index of the WordEvent
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.WordEventArgs.Word">
            <summary>
                Word that caused the WordEvent
            </summary>
        </member>
        <member name="P:NetSpell.SpellChecker.WordEventArgs.WordIndex">
            <summary>
                Word index of the WordEvent
            </summary>
        </member>
        <member name="T:NetSpell.SpellChecker.SpellingForm">
            <summary>
            Summary description for SpellingForm.
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.SpellingForm.#ctor(NetSpell.SpellChecker.Spelling)">
            <summary>
                Default Constructor
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.SpellingForm.Dispose(System.Boolean)">
            <summary>
            	Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.SpellingForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.SpellingForm.AttachEvents">
            <summary>
                called by spell checker to enable this 
                form to handle spell checker events
            </summary>
        </member>
        <member name="M:NetSpell.SpellChecker.SpellingForm.DetachEvents">
            <summary>
                called by spell checker to disable this 
                form from handling spell checker events
            </summary>
        </member>
    </members>
</doc>
